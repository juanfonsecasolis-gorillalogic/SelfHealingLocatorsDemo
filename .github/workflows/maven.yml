# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

  ##########################################
  # DotNet Set up
  ##########################################
    - name: Test DotNet project
      working-directory: dotnet-nunit-selenium
      run: |
        dotnet test SelfHealingLocatorsDemo.csproj -l:trx;
      continue-on-error: true

    - uses: actions/upload-artifact@v4
      with:
        name: DotNet-SelfHealingTestReport
        path: |
          dotnet-nunit-selenium/TestResults
          dotnet-nunit-selenium/bin/Debug/net8.0/TestResultsSummary.txt

  ##########################################
  # Java Set up
  ##########################################
    - name: Setup Java JDK
      uses: actions/setup-java@v4.4.0
      with:
        java-version: 21
        distribution: oracle

    - name: Set up Maven
      run: |
        wget https://dlcdn.apache.org/maven/maven-3/3.9.9/binaries/apache-maven-3.9.9-bin.tar.gz
        tar -xvf apache-maven-3.9.9-bin.tar.gz
        mv apache-maven-3.9.9 /opt/
        echo "/opt/apache-maven-3.9.9/bin" >> $GITHUB_PATH

    - name: Build with Maven
      working-directory: java-testng-selenium
      run: |
        mvn clean compile -q

    - name: Docker Compose with Tests Action
      uses: adambirds/docker-compose-action@v1.5.0
      with:
        compose-file: java-testng-selenium/healenium/docker-compose.yaml
      continue-on-error: false

    - name: Docker status
      working-directory: java-testng-selenium
      run: |
        docker ps -a

  ##########################################
  # Chrome
  ##########################################
    - name: Test with Maven Chrome
      working-directory: java-testng-selenium
      run: |
        mvn clean test -DdriverType=Chrome -Dkey=null
      continue-on-error: true

    - uses: actions/upload-artifact@v4
      with:
        name: Chrome-SelfHealingTestReport
        path: java-testng-selenium/target/surefire-reports

  ##########################################
  # Healenium
  ##########################################
    - name: Test with Maven Chrome Healenium
      working-directory: java-testng-selenium
      run: |
        mvn clean test -DdriverType=ChromeHealenium -Dkey=null
      continue-on-error: true

    - uses: actions/upload-artifact@v4
      with:
        name: Healenium-SelfHealingTestReport
        path: java-testng-selenium/target/surefire-reports
  
  ##########################################
  # TestRigor
  ##########################################
    - name: Test with Maven Chrome TestRigor
      working-directory: java-testng-selenium
      env:
        TEST_RIGOR_API_KEY: ${{ secrets.TEST_RIGOR_API_KEY }}
      run: |
        mvn clean test -DdriverType=ChromeTestRigor -Dkey="$TEST_RIGOR_API_KEY"
      continue-on-error: true
  
    - uses: actions/upload-artifact@v4
      with:
        name: TestRigor-SelfHealingTestReport
        path: java-testng-selenium/target/surefire-reports
